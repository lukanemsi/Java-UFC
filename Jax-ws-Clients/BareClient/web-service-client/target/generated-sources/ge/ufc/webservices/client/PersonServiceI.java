
package ge.ufc.webservices.client;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M4
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PersonServiceI", targetNamespace = "http://ws.webapps.ufc.ge/")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonServiceI {


    /**
     * 
     * @param addPersonRequest
     * @return
     *     returns ge.ufc.webservices.client.AddPersonResponse
     * @throws PersonAlreadyExistsException_Exception
     */
    @WebMethod(operationName = "AddPerson")
    @WebResult(name = "addPersonResult", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "addPersonResult")
    @Action(input = "http://ws.webapps.ufc.ge/PersonServiceI/AddPersonRequest", output = "http://ws.webapps.ufc.ge/PersonServiceI/AddPersonResponse", fault = {
        @FaultAction(className = PersonAlreadyExistsException_Exception.class, value = "http://ws.webapps.ufc.ge/PersonServiceI/AddPerson/Fault/PersonAlreadyExistsException")
    })
    public AddPersonResponse addPerson(
        @WebParam(name = "AddPersonRequest", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "AddPersonRequest")
        AddPersonRequest addPersonRequest)
        throws PersonAlreadyExistsException_Exception
    ;

    /**
     * 
     * @param updatePersonRequest
     * @return
     *     returns ge.ufc.webservices.client.UpdatePersonResponse
     * @throws PersonNotFoundException_Exception
     */
    @WebMethod(operationName = "UpdatePerson")
    @WebResult(name = "UpdatePersonResult", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "UpdatePersonResult")
    @Action(input = "http://ws.webapps.ufc.ge/PersonServiceI/UpdatePersonRequest", output = "http://ws.webapps.ufc.ge/PersonServiceI/UpdatePersonResponse", fault = {
        @FaultAction(className = PersonNotFoundException_Exception.class, value = "http://ws.webapps.ufc.ge/PersonServiceI/UpdatePerson/Fault/PersonNotFoundException")
    })
    public UpdatePersonResponse updatePerson(
        @WebParam(name = "UpdatePersonRequest", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "UpdatePersonRequest")
        UpdatePersonRequest updatePersonRequest)
        throws PersonNotFoundException_Exception
    ;

    /**
     * 
     * @param deletePersonRequest
     * @return
     *     returns ge.ufc.webservices.client.DeletePersonResponse
     * @throws PersonNotFoundException_Exception
     */
    @WebMethod(operationName = "DeletePerson")
    @WebResult(name = "DeletePersonResult", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "DeletePersonResult")
    @Action(input = "http://ws.webapps.ufc.ge/PersonServiceI/DeletePersonRequest", output = "http://ws.webapps.ufc.ge/PersonServiceI/DeletePersonResponse", fault = {
        @FaultAction(className = PersonNotFoundException_Exception.class, value = "http://ws.webapps.ufc.ge/PersonServiceI/DeletePerson/Fault/PersonNotFoundException")
    })
    public DeletePersonResponse deletePerson(
        @WebParam(name = "DeletePersonRequest", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "DeletePersonRequest")
        DeletePersonRequest deletePersonRequest)
        throws PersonNotFoundException_Exception
    ;

    /**
     * 
     * @param getPersonRequest
     * @return
     *     returns ge.ufc.webservices.client.GetPersonResponse
     * @throws PersonNotFoundException_Exception
     */
    @WebMethod(operationName = "GetPerson")
    @WebResult(name = "GetPersonResult", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "GetPersonResult")
    @Action(input = "http://ws.webapps.ufc.ge/PersonServiceI/GetPersonRequest", output = "http://ws.webapps.ufc.ge/PersonServiceI/GetPersonResponse", fault = {
        @FaultAction(className = PersonNotFoundException_Exception.class, value = "http://ws.webapps.ufc.ge/PersonServiceI/GetPerson/Fault/PersonNotFoundException")
    })
    public GetPersonResponse getPerson(
        @WebParam(name = "GetPersonRequest", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "GetPersonRequest")
        GetPersonRequest getPersonRequest)
        throws PersonNotFoundException_Exception
    ;

    /**
     * 
     * @param listPersonRequest
     * @return
     *     returns ge.ufc.webservices.client.ListPersonResponse
     */
    @WebMethod(operationName = "ListPerson")
    @WebResult(name = "ListPerson", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "ListPerson")
    @Action(input = "http://ws.webapps.ufc.ge/PersonServiceI/ListPersonRequest", output = "http://ws.webapps.ufc.ge/PersonServiceI/ListPersonResponse")
    public ListPersonResponse listPerson(
        @WebParam(name = "ListPersonRequest", targetNamespace = "http://ws.webapps.ufc.ge/", partName = "ListPersonRequest")
        ListPersonRequest listPersonRequest);

}
